// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/L-oris/yabb/models/tpl (interfaces: Template)

// Package tpl is a generated GoMock package.
package tpl

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTemplate is a mock of Template interface
type MockTemplate struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateMockRecorder
}

// MockTemplateMockRecorder is the mock recorder for MockTemplate
type MockTemplateMockRecorder struct {
	mock *MockTemplate
}

// NewMockTemplate creates a new mock instance
func NewMockTemplate(ctrl *gomock.Controller) *MockTemplate {
	mock := &MockTemplate{ctrl: ctrl}
	mock.recorder = &MockTemplateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTemplate) EXPECT() *MockTemplateMockRecorder {
	return m.recorder
}

// Render mocks base method
func (m *MockTemplate) Render(arg0 http.ResponseWriter, arg1 string, arg2 interface{}) {
	m.ctrl.Call(m, "Render", arg0, arg1, arg2)
}

// Render indicates an expected call of Render
func (mr *MockTemplateMockRecorder) Render(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockTemplate)(nil).Render), arg0, arg1, arg2)
}
